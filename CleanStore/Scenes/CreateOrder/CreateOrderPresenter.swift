//
//  CreateOrderPresenter.swift
//  CleanStore
//
//  Created by iMeraj-MacbookPro on 28/12/2017.
//  Copyright (c) 2017 Meraj. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RxSwift
import RxCocoa

protocol CreateOrderPresentationLogic
{
    var viewModel: Driver<CreateOrderModel.DTO.ViewModel> { get }
    func presentOrder(response: CreateOrderModel.DTO.Response)
}

class CreateOrderPresenter: CreateOrderPresentationLogic
{
    var viewModel: Driver<CreateOrderModel.DTO.ViewModel> {
        return (interactor?.createOrderResponse
                    .map { response in
                        return CreateOrderModel.DTO.ViewModel(formattedResult: response.result.uppercased())
                    }.asDriver(onErrorJustReturn: CreateOrderModel.DTO.ViewModel(formattedResult: "Failed to create order!")))!
    }
    
    var interactor: CreateOrderBusinessLogic?
    weak var viewController: CreateOrderDisplayLogic?
    
//    viewModel: Driver<CreateOrderModel.DTO.ViewModel> {
//        return (interactor?.createOrderResponse
//            .map { response in
//                return CreateOrderModel.DTO.ViewModel(formattedResult: response.result.uppercased())
//            }.asDriver(onErrorJustReturn: CreateOrderModel.DTO.ViewModel(formattedResult: "Failed to create order!")))!
//    }
    
    // MARK: Do something
    
    func presentOrder(response: CreateOrderModel.DTO.Response) {
    }
}
